/*
 * Desarrollar un programa o programas que simulen lo siguiente:
1 Gestiòn de memoria:
a. Reubicación contigua simple
b. Particiones estáticas un sólo tamaño
c. Particiones estáticas de varios tamaños
d. Particiones dinámicas.
e. Segmentación
f. Paginación  
Comparar y medir la fragmentaciòn después de terminar la ubicación de los archivos en memoria

 */
package gestiondememoria;

import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Omar Beltrán
 * RCS Reubicación Contigua Simple
 */
public final class RCS extends javax.swing.JFrame {
    private int blockSize;
    private static final int LIMSUP = 120;
    private static final int LIMINF = 1;
    private int nFile;
    private JLabel label[] = new JLabel[121];
    private boolean isFree[] = new boolean[121];
    /**
     * Creates new form NewJFrame
     */
    public RCS() {
        initComponents();
        setLocationRelativeTo(this);
        blockSize = 20;
        nFile = 1;
        jTextArea1.append("Tamaño de bloque "+blockSize+" Kb\n");
        initIsFree();
        createLabel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuAction = new javax.swing.JMenu();
        jMenuAddFile = new javax.swing.JMenuItem();
        jMenuClearAll = new javax.swing.JMenuItem();
        jMenuExit = new javax.swing.JMenuItem();
        jMenuConfiguration = new javax.swing.JMenu();
        jMenuBlockSize = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemCredits = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jMenuAction.setText("Actions");

        jMenuAddFile.setText("Add File");
        jMenuAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAddFileActionPerformed(evt);
            }
        });
        jMenuAction.add(jMenuAddFile);

        jMenuClearAll.setText("Reset");
        jMenuClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuClearAllActionPerformed(evt);
            }
        });
        jMenuAction.add(jMenuClearAll);

        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenuAction.add(jMenuExit);

        jMenuBar1.add(jMenuAction);

        jMenuConfiguration.setText("Configuration");

        jMenuBlockSize.setText("Block Size");
        jMenuBlockSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBlockSizeActionPerformed(evt);
            }
        });
        jMenuConfiguration.add(jMenuBlockSize);

        jMenuBar1.add(jMenuConfiguration);

        jMenuHelp.setText("Help");

        jMenuItemCredits.setText("Credits");
        jMenuItemCredits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreditsActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemCredits);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(502, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAddFileActionPerformed

        if (blockSize == 0) {
            JOptionPane.showMessageDialog(null,"El tamaño de bloque no puede ser 0","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        else {
            int fileSize = Integer.parseInt(JOptionPane.showInputDialog("Enter file size Kb"));
            int start = getStartFileBlock(fileSize);
            int end = getFinalFileBlock(start, fileSize);
            jTextArea1.append("Archivo "+nFile+" -->  Tamaño: "+fileSize+", Bloque inicio "+start+
                ", Bloque final "+end+"\n");
            nFile++;
            paintBlocks(start, end, getColor(nFile));
        }
    }//GEN-LAST:event_jMenuAddFileActionPerformed

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        System.exit(1);
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void jMenuBlockSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBlockSizeActionPerformed
        int blockSizeTmp = Integer.parseInt(JOptionPane.showInputDialog("Enter Block Size Kb"));
        if (blockSizeTmp > 0) {
            blockSize = blockSizeTmp;
        }
        else {
            JOptionPane.showMessageDialog(null,"El tamaño de bloque debe ser mayor que 0","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuBlockSizeActionPerformed

    private void jMenuItemCreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreditsActionPerformed
        JOptionPane.showMessageDialog(null,"Este programa fué desarrollado y diseñado por Omar José Beltrán Rodríguez","Creditos",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItemCreditsActionPerformed

    private void jMenuClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuClearAllActionPerformed
        paintBlocks(LIMINF, LIMSUP, Color.WHITE);
        initIsFree();
        nFile = 1;
    }//GEN-LAST:event_jMenuClearAllActionPerformed

    private int getStartFileBlock(int fileSize) {
        int start;
        int trying = 0;
        do{
            start = (int) Math.floor(Math.random() * (LIMSUP-LIMINF + 1) + LIMINF);
            trying++;
        }while(!isFreeBuffer(start, fileSize) || trying == 500);
        return start;
    }
    
    private boolean isFreeBuffer(int start, int fileSize) {
        int end = getFinalFileBlock(start, fileSize);
        for (int index = start ; index <= end ; index++) {
            if (!isFree[index]) {
                return false;
            }
        }
        return true;
    }
    
    private int getFinalFileBlock(int startBlock, int fileSize) {
        int finalPosition = 0;
        finalPosition = (int) Math.floor(fileSize/blockSize) + startBlock;
        return finalPosition;
    }
    
    private void paintBlocks(int start, int end, Color color) {
        for (int index = start ; index <= end ; index++) {
            label[index].setBackground(color);
            isFree[index] = false;
        }
    }
    
    private Color getColor(int color) {
        switch (color) {
            case 1:
                return Color.RED;
            case 2:
                return Color.PINK;
            case 3:
                return Color.YELLOW;
            case 4:
                return Color.GREEN;
            case 5:
                return Color.BLUE;
            case 6:
                return Color.CYAN;
            case 7:
                return Color.MAGENTA;
            case 8:
                return Color.ORANGE;
            default:
                return Color.BLACK;
        }
    }
    
    void createLabel() {
        int X = 10, Y = 110, size = 40;
        Font fuente = new Font("Arial", 3, 14);
        //label[0] no es usado
        for(int index=1; index <= 120; index++) {
            label[index]= new JLabel("lbl" +index);
            label[index].setBounds(X, Y, size, size);
            
            //edit properties
            label[index].setBorder(BorderFactory.createEtchedBorder(Color.WHITE,Color.LIGHT_GRAY));
            label[index].setBackground(Color.WHITE);
            label[index].setText(String.valueOf(index));
            label[index].setFont(fuente);
            label[index].setOpaque(true);
            label[index].setHorizontalAlignment(0);
            label[index].setVerticalAlignment(0);
            label[index].setHorizontalTextPosition(11);
            label[index].setVerticalTextPosition(0);
            add(label[index]);
            X = X+size+10;
            if(index%12 == 0) {
                Y = Y+size+10;
                X = 10;
            }
        }
    }
    
    private void initIsFree() {
        for(int index = 0; index <= 120; index++) {
            isFree[index] = true;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RCS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RCS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RCS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RCS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RCS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenuAction;
    private javax.swing.JMenuItem jMenuAddFile;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuBlockSize;
    private javax.swing.JMenuItem jMenuClearAll;
    private javax.swing.JMenu jMenuConfiguration;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemCredits;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
